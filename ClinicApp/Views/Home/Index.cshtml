@using ClinicApp.Infrastructure
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@model IndexViewModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container py-3 text-center">
    <h1 class="display-3">Clinic App</h1>
    <p>Patients are our priority</p>
    
    @switch (Model.RoleName)
    {
        case Constants.Roles.PatientRoleName:
        {
            @if (!Model.IsActivated)
            {
                <p class="h6 text-danger">Currently your account is not activated, so you're not able to sign in for a visit to any doctor.
                    Please wait until a Manager activates your account.
                </p>
            }
            <partial name="_DoctorsList" model="@Model.Doctors"/>
            break;
        }
        case Constants.Roles.DoctorRoleName:
            <p>Currently signed in as a Doctor.</p>
            break;
        case Constants.Roles.ManagerRoleName:
            <p>Currently signed in as a Manager.</p>
            break;
        default:
            @if (SignInManager.IsSignedIn(User))
            {
                <p>User signed in.</p>
            }
            else
            {
                <p>User not signed in.</p>
            }
            break;
    }
</div>
